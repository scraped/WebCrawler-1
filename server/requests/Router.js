// Generated by CoffeeScript 1.11.1
var Router, fs, path;

fs = require('fs');

path = require('path');

Router = {
  getRoutes: function(dir, app, Sequelize, db) {
    return fs.readdirSync(dir).forEach(function(file) {
      var name, stat;
      name = path.join(dir, file);
      stat = fs.lstatSync(name);
      if (stat.isDirectory()) {
        return Router.getRoutes(name, app, Sequelize, db);
      } else if (file.toLowerCase() === 'routes.js') {
        return require(name)(app, Sequelize, db);
      }
    });
  },
  getModules: function(dir, db, app) {
    var modules;
    modules = {
      controllers: {},
      models: {},
      fixtures: {}
    };
    fs.readdirSync(dir).forEach((function(_this) {
      return function(file) {
        var controller, fixtures, m, model, name, stat;
        name = path.join(dir, file);
        stat = fs.lstatSync(name);
        controller = path.join(name, 'index.js');
        model = path.join(name, 'model.js');
        fixtures = path.join(name, 'fixtures.json');
        if (stat.isDirectory()) {
          if (fs.existsSync(controller)) {
            modules.controllers[file] = require(controller)(app, db.sequelize, db.instance);
          }
          if (fs.existsSync(fixtures)) {
            modules.fixtures[file] = require(fixtures);
          }
          if (fs.existsSync(model)) {
            m = require(model);
            if (typeof m === 'function') {
              return modules.models[file] = m(db.instance, db.sequelize, app);
            }
          }
        }
      };
    })(this));
    return modules;
  }
};

module.exports = Router;

//# sourceMappingURL=Router.js.map
