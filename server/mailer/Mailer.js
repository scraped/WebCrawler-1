// Generated by CoffeeScript 1.11.1
var Mailer, _, fs, mailgun, mustache;

fs = require('fs');

_ = require('lodash');

mustache = require('mustache');

mailgun = require('mailgun-js');

Mailer = (function() {
  function Mailer(app, options) {
    this.app = app;
    if (options == null) {
      options = {};
    }
    this.from = options.from || ("no-reply@" + this.app.config.domain);
    this.ext = options.ext || 'html';
    this.dir = options.dir || (__dirname + "/../../layouts/emails/templates");
    this.instance = mailgun({
      apiKey: this.app.config.mailgun_key,
      domain: this.app.config.domain
    });
    this.vars = {
      title: this.app.config.name,
      appName: this.app.config.name,
      year: new Date().getFullYear(),
      domain: {
        url: "http://" + this.app.config.domain,
        name: this.app.config.domain
      },
      header: null,
      content: null,
      action: {
        url: null,
        text: null
      }
    };
    this.app.logger.info('âœ“ '.bold.green + 'Started mailer daemon.');
  }

  Mailer.prototype.loadTemplate = function(file, cb) {
    return fs.readFile(this.dir + "/" + file + "." + this.ext, 'utf8', function(err, data) {
      if (err === null) {
        return cb(data);
      }
    });
  };

  Mailer.prototype.parse = function(template, vars) {
    return mustache.to_html(template, vars);
  };

  Mailer.prototype.loadPrefab = function(prefab, options, cb) {
    var vars;
    vars = require(__dirname + "/../../layouts/emails/prefabs/" + prefab + ".json");
    return this.loadTemplate(vars.template, (function(_this) {
      return function(html) {
        var parsed;
        parsed = _this.parse(html, _.merge(_.merge(_this.vars, vars), options));
        console.log(_.merge(_.merge(_this.vars, vars), options));
        return cb({
          from: options.from || _this.from,
          to: options.to,
          subject: options.subject || vars.subject,
          html: parsed
        });
      };
    })(this));
  };

  Mailer.prototype.send = function(prefab, options, cb) {
    return this.loadPrefab(prefab, options, (function(_this) {
      return function(data) {
        return _this.instance.messages().send(data, function(err, body) {
          console.log(err, body);
          if (typeof cb === 'function') {
            return cb(err, body);
          }
        });
      };
    })(this));
  };

  return Mailer;

})();

module.exports = Mailer;

//# sourceMappingURL=Mailer.js.map
